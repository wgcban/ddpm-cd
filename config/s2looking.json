{
    "name": "ddpm-RS-CDHead-S2Looking",
    "phase": "train", // train or test
    "gpu_ids": [
        0
    ],

    "path": { //set the paths
        "log": "logs",
        "tb_logger": "tb_logger",
        "results": "results",
        "checkpoint": "checkpoint",
        //"resume_state": null
        "resume_state": "experiments/ddpm-RS-Unet_220428_183313/checkpoint/I190000_E97" //"experiments/ddpm-RS-Unet_220425_062858/checkpoint/I60000_E8" //set path to pre-trained diffusion model
    },

    "path_cd": { //set the path 
        "log": "logs",
        "tb_logger": "tb_logger",
        "results": "results",
        "checkpoint": "checkpoint",
        "resume_state": null
        //"resume_state": "experiments/ddpm-RS-CDHead_220502_082603/checkpoint/best_cd_model" //t=50
        //"resume_state": "experiments/ddpm-RS-CDHead-CDD_220504_154222/checkpoint/best_cd_model" //t=100
    },

    "datasets": {
        "train": {
            "name": "S2Looking",
            "dataroot": "dataset/S2Looking/",
            "resolution": 1024, // high resolution
            "batch_size": 4, //16
            "num_workers": 4,
            "use_shuffle": true,
            "data_len": -1 // -1 represents all data used in train
        },
        "val": {
            "name": "S2Looking",
            "dataroot": "dataset/S2Looking/",
            "resolution": 1024, // high resolution
            "batch_size": 4,
            "num_workers": 8,
            "use_shuffle": true,
            "data_len": -1 // -1 represents all data used in train
        },
        "test": {
            "name": "S2Looking",
            "dataroot": "dataset/S2Looking/",
            "resolution": 1024, // high resolution
            "batch_size": 4,
            "num_workers": 8,
            "use_shuffle": false,
            "data_len": -1 // -1 represents all data used in train
        }
    },

    "model_cd": {
        "feat_scales": [2, 5, 8, 11, 14],
        "out_channels": 2,
        "loss_type": "ce",
        "output_cm_size": 1024,
        "psp": true,
        "feat_type": "dec", //Options: 'enc'/'dec'
        "t": [50, 100, 400]
    },

    "model": {
        "which_model_G": "sr3", // use the ddpm or sr3 network structure
        "finetune_norm": false,
        "unet": {
            "in_channel": 3,
            "out_channel": 3,
            "inner_channel": 128,
            "channel_multiplier": [
                1,
                2,
                4,
                8,
                8
            ],
            "attn_res": [
                16
            ],
            "res_blocks": 2,
            "dropout": 0.2
        },
        "beta_schedule": { // use munual beta_schedule for acceleration
            "train": {
                "schedule": "linear",
                "n_timestep": 2000,
                "linear_start": 1e-6,
                "linear_end": 1e-2
            },
            "val": {
                "schedule": "linear",
                "n_timestep": 2000,
                "linear_start": 1e-6,
                "linear_end": 1e-2
            },
            "test": {
                "schedule": "linear",
                "n_timestep": 2000,
                "linear_start": 1e-6,
                "linear_end": 1e-2
            }
        },
        "diffusion": {
            "image_size": 256,
            "channels": 3, //sample channel
            "loss": "l2", //options "l1" or "l2"
            "conditional": false // unconditional generation or unconditional generation(super_resolution)
        }
    },
    
    "train": {
        "n_epoch": 120,
        "train_print_freq": 500,
        "val_freq": 1,
        "val_print_freq": 50,
        "optimizer": {
            "type": "adam",
            "lr": 1e-4
        },
        "sheduler": {
            "lr_policy": "linear",  // options: linear, poly, step
            "n_steps": 3,           //this is aplicable only if step sheduler using
            "gamma": 0.1            //Multiplicative factor of learning rate decay. Default: 0.1.
        }
    },
    "wandb": {
        "project": "ddpm-RS-CDHead"
    }
}
